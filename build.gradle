plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

apply plugin: "maven"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archive_name
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    includeMod "me.shedaniel.cloth:config-2:${project.cloth_version}"
    includeMod "me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}"
    includeMod "com.terraformersmc.terraform-api:terraform-tree-api-v1:${project.terraform_tree_version}"

    modCompile "io.github.prospector:modmenu:${project.modmenu_version}"

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

def includeMod(String dep) {
    dependencies.modCompile(dep)
    dependencies.include(dep)
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}